#+title: Readme

* About
This integrates gptel into org babel, by providing convenience features for fixing errors in org babel cells. For instance, this provides commands to send the cell and the output to gptel, get a correction, and apply that as a patch. It is also possible to send the commands automatically, though currently only for python.

This has been tested with python and bash, though should be anguage agnostic. The automatic response on errors has only been tested with python, and requires some means for detecting an error (see the variable org-babel-error-patterns). PRs are welcome!

* Set up

This requires gptel-default-mode to be set to org-mode to work, since it expects an org block in the response.

#+begin_src emacs-lisp :tangle yes
(gptel-default-mode 'org-mode)
#+end_src

The conversation happens in the *CELL ERRORS* buffer.

| Key         | Command               | Description                             |
|-------------+-----------------------+-----------------------------------------|
| ~SPC o c s~ | ~send-block-to-gptel~ | Send block to GPTel, and ask for a fix. |
| ~SPC o c p~ | ~patch-gptel-blocks~  | Apply the fix                           |
| ~SPC o c f~ | ~gptel-fix-block~     | Do the two things at once               |

If you set:

#+begin_src emacs-lisp :tangle yes
(setq gpt-babel/auto-send-on-traceback t)
#+end_src

Then blocks will be sent automatically when a traceback is detected in the response. By default this variable is nil -- this can rack up an unnecessary bill with API calls!
